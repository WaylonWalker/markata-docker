name: Docker Build
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  generate_matrix:
    runs-on: ubuntu-latest
    outputs:
      VERSIONS: ${{ steps.generate-matrix.outputs.VERSIONS }}
    steps:
      - uses: actions/setup-python@v4.0.0
        with:
          python-version: '3.10'
      - name: Generate Matrix
        id: generate-matrix
        run: |
          VERSIONS=`pip index versions markata | grep "Available versions:" | sed "s/Available versions://" | sed 's/,//g' | sed 's/[^ ][^ ]*/"&",/g'`
          echo "::set-output name=VERSIONS::[$VERSIONS]"

  build:
    runs-on: ubuntu-latest
    needs: 
      - generate_matrix
    strategy:
      matrix:
        version: ${{ fromJson(needs.generate_matrix.outputs.VERSIONS) }}
    steps:
      - uses: actions/checkout@v3

      - name: Generate Dockerfile
        run: |
          export VERSION=${{ matrix.version }}
          envsubst < dockertemplate > Dockerfile

      - run: cat Dockerfile
      - run: ls
      - run: pwd

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - run: docker build . -f Dockfile -t waylonwalker/markata:${{ matrix.version }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          push: true
          tags: waylonwalker/markata:${{ matrix.version }}
